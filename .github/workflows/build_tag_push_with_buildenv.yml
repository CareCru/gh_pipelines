name: Create and Publish Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        description: Name of container image without a tag 
        required: true
        type: string
      environment:
        description: Name of Environment
        required: false
        type: string
      ecr_repo:
        description: Name of ECR repo used to store container images
        required: true
        type: string
      context:
        description: Context for where the Dockerfile exists
        type: string
        default: "."
      secret_name:
        description: AWS Secret Manger Secret Name
        type: string
      region:
        type: string
        default: "ca-central-1"
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
          
      - id: var_set_outputs
        run: |
          echo "::set-output name=github_sha_tag::`echo ${GITHUB_SHA} | cut -c1-8`"          
          echo "::set-output name=github_head_ref::`echo ${GITHUB_HEAD_REF} | awk -F '/' '{print $1}'`"          
          echo "::set-output name=github_ref::`echo ${GITHUB_REF}`"          
          echo "::set-output name=github_ref_name::`echo ${GITHUB_REF_NAME}`"          
          echo "::set-output name=github_ref_type::`echo ${GITHUB_REF_TYPE}`"          
          echo "::set-output name=github_repository::`echo ${GITHUB_REPOSITORY}`"
          
      - id: var_read_outputs
        run: |
          echo user_tag: ${{ steps.user_branch_tag.outputs.user_tag }}          
          echo github_sha_tag: ${{ steps.var_set_outputs.outputs.github_sha_tag }}          
          echo github_head_ref: ${{ steps.var_set_outputs.outputs.github_head_ref }}      
          echo github_ref: ${{ steps.var_set_outputs.outputs.github_ref }}
          echo github_ref_name: ${{ steps.var_set_outputs.outputs.github_ref_name }}
          echo github_ref_type: ${{ steps.var_set_outputs.outputs.github_ref_type }}
          echo github_repository: ${{ steps.var_set_outputs.outputs.github_repository }}
          
      - id: short_sha
        run: |
          echo "::set-output name=tag::`echo ${GITHUB_SHA} | cut -c1-8`"
          
      - uses: aws-actions/configure-aws-credentials@v1
        name: Configure AWS Credentials
        with: 
          aws-access-key-id: ${{secrets.aws_access_key_id}}
          aws-secret-access-key:  ${{secrets.aws_secret_access_key}}
          aws-region: ${{inputs.region}}

      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: say8425/aws-secrets-manager-actions@v2
        with:
          AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
          AWS_DEFAULT_REGION: ${{inputs.region}}
          SECRET_NAME: build/${{inputs.environment}}/${{inputs.secret_name}}
          OUTPUT_PATH: '.env' 
      
      - name: Setup Build Arg List
        id: build_arg_list
        run : |
          echo "::set-output name=env::`awk '{print $1}' .env | paste -s -d, -`"

 
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1

      - uses: aws-actions/amazon-ecr-login@v1
        name: AWS ECR Login
        id: login-ecr
          
      - name: Build image
        uses: ilteoood/docker_buildx@master
        with:
          publish: false # build done in next step to have multiple tags
          load: true
          platform: linux/amd64
          buildArg: ${{ steps.build_arg_list.outputs.env }}
          imageName:  ${{ steps.login-ecr.outputs.registry }}/${{inputs.image_name}}
          tag: ${{inputs.environment}}_${{ steps.short_sha.outputs.tag }}

      - name: Push Image to ECR
        id: push_image_ecr
        run : |
          docker tag ${{ steps.login-ecr.outputs.registry }}/${{inputs.image_name}}:${{inputs.environment}}_${{ steps.short_sha.outputs.tag }}  ${{ steps.login-ecr.outputs.registry }}/${{inputs.image_name}}:${{inputs.environment}}_${{ steps.var_set_outputs.outputs.github_head_ref }}
          docker tag ${{ steps.login-ecr.outputs.registry }}/${{inputs.image_name}}:${{inputs.environment}}_${{ steps.short_sha.outputs.tag }}  ${{ steps.login-ecr.outputs.registry }}/${{inputs.image_name}}:${{inputs.environment}}_latest
          docker push --all-tags ${{ steps.login-ecr.outputs.registry }}/${{inputs.image_name}}

