name: Create and Publish Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        description: Name of container image without a tag
        required: true
        type: string
      ecr_repo:
        description: Name of ECR repo used to store container images
        required: true
        type: string
      context:
        type: string
        default: "."
      dockerfile:
        description: Dockerfile name
        type: string
        default: "Dockerfile"
      region:
        type: string
        default: "ca-central-1"
      submodules:
        type: boolean 
        default: false
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      cicd_ssh_access_key:
        required: false
      pac:
        required: false
jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
        if: false == ${{inputs.submodules}}
      
      - uses: actions/checkout@v3
        if: ${{inputs.submodules}}
        with:
          submodules: 'recursive'
          token: ${{secrets.pac}}
          
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - id: short_sha
        name: Set Short SHA
        run: |
          echo "::set-output name=tag::`echo ${GITHUB_SHA} | cut -c1-8`"

      - uses: aws-actions/configure-aws-credentials@v1
        name: Configure AWS Credentials
        with:
          aws-access-key-id: ${{secrets.aws_access_key_id}}
          aws-secret-access-key:  ${{secrets.aws_secret_access_key}}
          aws-region: ${{inputs.region}}

          
      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: say8425/aws-secrets-manager-actions@v2
        with:
          AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
          AWS_DEFAULT_REGION: ${{inputs.region}}
          SECRET_NAME: build/generic/npm_tokens
          OUTPUT_PATH: '.env'

      - name: Set build argument variables
        id: build_arg_var
        run: |
          BUILD_ARGS=$(cat .env)
          echo "BUILD_ARGS<<EOF" >> $GITHUB_ENV
          echo "$BUILD_ARGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1

      - uses: aws-actions/amazon-ecr-login@v1
        name: AWS ECR Login
        id: login-ecr

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          ssh: |
            default=${{ env.SSH_AUTH_SOCK }}
          context: ${{inputs.context}}
          file: ${{inputs.dockerfile}}
          platforms: linux/amd64
          build-args: ${{ env.BUILD_ARGS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

